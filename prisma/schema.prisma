generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model school_attendence {
  attendence_id  Int            @id @default(autoincrement())
  att_remarks    String         @db.Text
  att_student_id Int
  attendence     Int
  school_student school_student @relation(fields: [att_student_id], references: [student_id], onDelete: Cascade, onUpdate: NoAction, map: "att_student")
  attendance     attendance     @relation(fields: [attendence], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "att_attend")

  @@index([attendence], map: "att_attend_idx")
  @@index([att_student_id], map: "att_student_idx")
}

model school_class_room {
  class_id         Int                @id @default(autoincrement())
  cl_name          String             @db.VarChar(45)
  cl_description   String?            @db.VarChar(45)
  cl_batch_year    Int                @db.Year
  cl_status        Boolean?
  cl_remarks       String?            @db.VarChar(45)
  cl_teacher_id    Int?
  cl_school_id     Int
  user_school      user_school        @relation(fields: [cl_school_id], references: [school_id], onDelete: NoAction, onUpdate: NoAction, map: "class_school")
  school_teacher   school_teacher?    @relation(fields: [cl_teacher_id], references: [teacher_id], onDelete: NoAction, onUpdate: NoAction, map: "class_teacher")
  assignment       assignment[]
  attendance       attendance[]
  class_section    class_section[]
  exam_schedule    exam_schedule[]
  school_course    school_course[]
  school_student   school_student[]
  school_timetable school_timetable[]

  @@index([cl_school_id], map: "class_school_idx")
  @@index([cl_teacher_id], map: "class_teacher_idx")
}

model school_course {
  course_id         Int                @id @default(autoincrement())
  course_name       String             @db.VarChar(45)
  course_desription String             @db.VarChar(45)
  course_school_id  Int
  class_id          Int
  school_class_room school_class_room  @relation(fields: [class_id], references: [class_id], onDelete: Cascade, onUpdate: NoAction, map: "course_class_link")
  user_school       user_school        @relation(fields: [course_school_id], references: [school_id], onDelete: NoAction, onUpdate: NoAction, map: "course_school")
  assignment        assignment[]
  exam_schedule     exam_schedule[]
  school_timetable  school_timetable[]

  @@index([class_id], map: "course_class_idx")
  @@index([course_school_id], map: "grade_school_idx")
}

model school_exam {
  exam_id         Int             @id @default(autoincrement())
  exam_name       String          @db.VarChar(45)
  exam_start_date DateTime        @db.Date
  exam_school_id  Int
  user_school     user_school     @relation(fields: [exam_school_id], references: [school_id], onDelete: NoAction, onUpdate: NoAction, map: "exam_school")
  exam_schedule   exam_schedule[]

  @@index([exam_school_id], map: "exam_school_idx")
}

model school_parent {
  parent_id      Int              @id @default(autoincrement())
  parent_phone   String           @db.VarChar(15)
  parent_status  Boolean?
  school_id      Int
  user_id        Int
  user_school    user_school      @relation(fields: [school_id], references: [school_id], onDelete: NoAction, onUpdate: NoAction, map: "parent_school")
  user           user             @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "parent_user")
  school_student school_student[]

  @@index([school_id], map: "parent_school_idx")
  @@index([user_id], map: "parent_user_idx")
}

model school_student {
  student_id            Int                     @id @default(autoincrement())
  student_reg_no        String                  @unique(map: "school_reg_no_UNIQUE") @db.VarChar(45)
  student_dob           DateTime                @db.Date
  student_join_date     DateTime                @db.Date
  student_status        Boolean?
  student_parent_id     Int?
  student_class_id      Int?
  school_id             Int
  user_id               Int
  student_section_id    Int
  user_school           user_school             @relation(fields: [school_id], references: [school_id], onDelete: Cascade, onUpdate: NoAction, map: "student_school")
  school_class_room     school_class_room?      @relation(fields: [student_class_id], references: [class_id], onDelete: Cascade, onUpdate: NoAction, map: "student_class")
  school_parent         school_parent?          @relation(fields: [student_parent_id], references: [parent_id], onUpdate: NoAction, map: "student_parent")
  class_section         class_section           @relation(fields: [student_section_id], references: [section_id], onDelete: Cascade, onUpdate: NoAction, map: "student_section")
  user                  user                    @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "student_user")
  assignment_submission assignment_submission[]
  exam_submission       exam_submission[]
  school_attendence     school_attendence[]

  @@index([student_class_id], map: "student_class_idx")
  @@index([student_parent_id], map: "student_parent_idx")
  @@index([school_id], map: "student_school_idx")
  @@index([student_section_id], map: "student_section_idx")
  @@index([user_id], map: "student_user_idx")
}

model school_teacher {
  teacher_id        Int                 @id @default(autoincrement())
  teacher_phone     String              @db.VarChar(15)
  city              String              @db.VarChar(45)
  description       String?             @db.MediumText
  teacher_status    Boolean?
  school_id         Int
  user_id           Int
  user_school       user_school         @relation(fields: [school_id], references: [school_id], onDelete: NoAction, onUpdate: NoAction, map: "teacher_school_link")
  user              user                @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "teacher_user")
  attendance        attendance[]
  exam_schedule     exam_schedule[]
  school_class_room school_class_room[]

  @@index([school_id], map: "teacher_school_idx")
  @@index([user_id], map: "teacher_user_idx")
}

model user {
  user_id              Int                    @id @default(autoincrement())
  user_name            String                 @db.VarChar(45)
  user_email           String                 @unique(map: "email") @db.VarChar(45)
  user_passward        String                 @db.VarChar(70)
  user_status          Int                    @db.TinyInt
  user_is_removed      Int                    @db.TinyInt
  user_role            Int
  user_img             String?                @db.VarChar(200)
  admin_user           admin_user?
  assignment           assignment[]
  school_parent        school_parent[]
  school_student       school_student[]
  school_teacher       school_teacher[]
  school_timetable     school_timetable[]
  user_package_payment user_package_payment[]
  user_school          user_school[]
  user_subscription    user_subscription?
  user_verification    user_verification?
}

model user_package_payment {
  package_id           Int      @id @default(autoincrement())
  package_name         String   @db.VarChar(45)
  package_paid_amount  String   @db.VarChar(45)
  package_payment_date DateTime @db.Date
  package_detail       String?  @db.VarChar(100)
  package_user_id      Int
  user                 user     @relation(fields: [package_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "package_user")

  @@index([package_user_id], map: "package_user_idx")
}

model user_school {
  school_id         Int                 @id @default(autoincrement())
  school_name       String              @db.VarChar(45)
  school_desc       String?             @db.MediumText
  school_email      String              @db.VarChar(45)
  school_logo       String?             @db.VarChar(100)
  school_status     Int?                @db.TinyInt
  school_is_removed Int                 @db.TinyInt
  school_user_id    Int
  user              user                @relation(fields: [school_user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "school_user")
  admin_user        admin_user?
  attendance        attendance[]
  notice            notice[]
  school_class_room school_class_room[]
  school_course     school_course[]
  school_exam       school_exam[]
  school_parent     school_parent[]
  school_student    school_student[]
  school_teacher    school_teacher[]
  school_timetable  school_timetable[]

  @@index([school_user_id], map: "school_user_idx")
}

model school_timetable {
  timetable_id      Int               @id @default(autoincrement())
  tt_day            String            @db.VarChar(45)
  tt_time_start     DateTime          @db.Time(0)
  tt_time_end       DateTime          @db.Time(0)
  tt_subject_id     Int
  tt_section_id     Int
  tt_class_id       Int
  tt_school_id      Int
  tt_teacher_id     Int?
  tt_class_link     String?           @db.VarChar(100)
  school_class_room school_class_room @relation(fields: [tt_class_id], references: [class_id], onDelete: NoAction, onUpdate: NoAction, map: "timetable_class")
  user_school       user_school       @relation(fields: [tt_school_id], references: [school_id], onDelete: NoAction, onUpdate: NoAction, map: "timetable_school")
  class_section     class_section     @relation(fields: [tt_section_id], references: [section_id], onDelete: NoAction, onUpdate: NoAction, map: "timetable_section")
  school_course     school_course     @relation(fields: [tt_subject_id], references: [course_id], onDelete: Cascade, onUpdate: NoAction, map: "timetable_course")
  user              user?             @relation(fields: [tt_teacher_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "timetable_teacher")

  @@index([tt_class_id], map: "timetable_class_idx")
  @@index([tt_subject_id], map: "timetable_course_idx")
  @@index([tt_school_id], map: "timetable_school_idx")
  @@index([tt_section_id], map: "timetable_section_idx")
  @@index([tt_teacher_id], map: "timetable_teacher_idx")
}

model plan {
  plan_id           Int                 @id @default(autoincrement())
  plan_name         String              @db.VarChar(45)
  plan_price        Decimal             @db.Decimal(10, 0)
  plan_is_active    Int                 @db.TinyInt
  user_subscription user_subscription[]
}

model user_subscription {
  subscription_id Int      @id @default(autoincrement())
  sb_user_id      Int      @unique(map: "sb_user_id_UNIQUE")
  sb_plan_id      Int
  sb_start_time   DateTime @db.Date
  sb_end_time     DateTime @db.Date
  plan            plan     @relation(fields: [sb_plan_id], references: [plan_id], onDelete: NoAction, onUpdate: NoAction, map: "subscription_plan")
  user            user     @relation(fields: [sb_user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "subscription_user")

  @@index([sb_plan_id], map: "subscription_plan_idx")
  @@index([sb_user_id], map: "subscription_user_idx")
}

model user_verification {
  id               Int    @id @default(autoincrement())
  user_id          Int    @unique(map: "user_id_UNIQUE")
  is_verified      Int    @db.TinyInt
  verifiction_code String @unique(map: "verifiction_code_UNIQUE") @db.VarChar(200)
  user             user   @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "verify_user")

  @@index([user_id], map: "verify_user_idx")
}

model admin_user {
  admin_id        Int         @id @default(autoincrement())
  admin_user_id   Int         @unique(map: "admin_user_id_UNIQUE")
  admin_school_id Int         @unique(map: "admin_school_id_UNIQUE")
  user_school     user_school @relation(fields: [admin_school_id], references: [school_id], onDelete: Cascade, onUpdate: NoAction, map: "admin_school")
  user            user        @relation(fields: [admin_user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "admin_user")

  @@index([admin_school_id], map: "admin_school_idx")
  @@index([admin_user_id], map: "admin_user_idx")
}

model class_section {
  section_id        Int                @id @default(autoincrement())
  section_name      String             @db.VarChar(45)
  section_class_id  Int
  school_class_room school_class_room  @relation(fields: [section_class_id], references: [class_id], onDelete: NoAction, onUpdate: NoAction, map: "section_classs")
  assignment        assignment[]
  attendance        attendance[]
  exam_schedule     exam_schedule[]
  school_student    school_student[]
  school_timetable  school_timetable[]

  @@index([section_class_id], map: "section_classs_idx")
}

model assignment {
  id                    Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(45)
  course                Int
  grade                 Int
  section               Int
  duedate               DateTime                @db.DateTime(1)
  teacher               Int
  totalmarks            Int
  file                  String                  @db.VarChar(200)
  file_name             String                  @db.VarChar(100)
  school_course         school_course           @relation(fields: [course], references: [course_id], onDelete: Cascade, onUpdate: NoAction, map: "assignment_course")
  school_class_room     school_class_room       @relation(fields: [grade], references: [class_id], onDelete: NoAction, onUpdate: NoAction, map: "assignment_class")
  class_section         class_section           @relation(fields: [section], references: [section_id], onDelete: NoAction, onUpdate: NoAction, map: "assignment_sec")
  user                  user                    @relation(fields: [teacher], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "assignment_teacher")
  assignment_submission assignment_submission[]

  @@index([grade], map: "assignment_class_idx")
  @@index([course])
  @@index([section], map: "assignment_sec_idx")
  @@index([teacher])
}

model assignment_submission {
  id                                           Int            @id @default(autoincrement())
  assignment                                   Int
  uploadingtime                                DateTime       @db.DateTime(1)
  student                                      Int
  gainmarks                                    Int?
  file                                         String         @db.VarChar(200)
  file_name                                    String         @db.VarChar(100)
  assignment_assignmentToassignment_submission assignment     @relation(fields: [assignment], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "submission_assignment")
  school_student                               school_student @relation(fields: [student], references: [student_id], onDelete: NoAction, onUpdate: NoAction, map: "submission_student")

  @@index([assignment], map: "submission_assignment_idx")
  @@index([student], map: "submission_student_idx")
}

model exam_schedule {
  id                Int               @id @default(autoincrement())
  exam              Int
  grade             Int
  section           Int
  course            Int
  teacher           Int
  date              DateTime?         @db.Date
  start_time        DateTime          @db.Time(0)
  end_time          DateTime          @db.Time(0)
  file_path         String?           @db.VarChar(200)
  file_name         String?           @db.VarChar(100)
  marks             Int?
  school_course     school_course     @relation(fields: [course], references: [course_id], onDelete: Cascade, onUpdate: NoAction, map: "exam_course")
  school_exam       school_exam       @relation(fields: [exam], references: [exam_id], onDelete: NoAction, onUpdate: NoAction, map: "schedule_exam")
  school_class_room school_class_room @relation(fields: [grade], references: [class_id], onDelete: NoAction, onUpdate: NoAction, map: "exam_grade")
  class_section     class_section     @relation(fields: [section], references: [section_id], onDelete: NoAction, onUpdate: NoAction, map: "exam_section")
  school_teacher    school_teacher    @relation(fields: [teacher], references: [teacher_id], onDelete: NoAction, onUpdate: NoAction, map: "exam_teacher")
  exam_submission   exam_submission[]

  @@index([course], map: "exam_course_idx")
  @@index([grade], map: "exam_grade_idx")
  @@index([section], map: "exam_sec_idx")
  @@index([teacher], map: "exam_teacher_idx")
  @@index([exam], map: "schedule_exam_idx")
}

model attendance {
  id                Int                 @id @default(autoincrement())
  date              DateTime            @db.Date
  teacher           Int
  grade             Int
  section           Int
  school            Int
  school_class_room school_class_room   @relation(fields: [grade], references: [class_id], onDelete: Cascade, onUpdate: NoAction, map: "att_grade")
  user_school       user_school         @relation(fields: [school], references: [school_id], onDelete: Cascade, onUpdate: NoAction, map: "att_school")
  class_section     class_section       @relation(fields: [section], references: [section_id], onDelete: Cascade, onUpdate: NoAction, map: "att_sec")
  school_teacher    school_teacher      @relation(fields: [teacher], references: [teacher_id], onDelete: Cascade, onUpdate: NoAction, map: "att_teacher")
  school_attendence school_attendence[]

  @@index([grade], map: "att_grade_idx")
  @@index([school], map: "att_school_idx")
  @@index([section], map: "att_sec_idx")
  @@index([teacher], map: "att_teach_idx")
}

model exam_submission {
  id                                           Int            @id @default(autoincrement())
  student                                      Int
  exam_schedule                                Int
  submit_time                                  DateTime       @db.DateTime(1)
  marks                                        Int?
  file                                         String         @db.VarChar(200)
  file_name                                    String         @db.VarChar(100)
  exam_schedule_exam_scheduleToexam_submission exam_schedule  @relation(fields: [exam_schedule], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "exam_sched")
  school_student                               school_student @relation(fields: [student], references: [student_id], onDelete: NoAction, onUpdate: NoAction, map: "exam_stu")

  @@index([exam_schedule], map: "exam_sched_idx")
  @@index([student], map: "exam_stu_idx")
}

model notice {
  id          Int         @id @default(autoincrement())
  heading     String      @db.MediumText
  description String      @db.LongText
  school      Int
  user_school user_school @relation(fields: [school], references: [school_id], onDelete: NoAction, onUpdate: NoAction, map: "school_notice")

  @@index([school], map: "school_notice_idx")
}
